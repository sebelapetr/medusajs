version: "3.8"
services:
  backend:
    build:
      dockerfile: Dockerfile
      context: ./backend
    container_name: medusa-server
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    volumes:
      - ./backend:/app/medusa
      - backend_node_modules:/app/medusa/node_modules
    ports:
      - "9000:9000"
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/medusa-store
      REDIS_URL: redis://cache
      NODE_ENV: development
      JWT_SECRET: some_jwt_secret
      COOKIE_SECRET: some_cookie_secret
      PORT: 9000
      MINIO_ENDPOINT: <http://minio:9000>
      MINIO_BUCKET: medusa-bucket
      MINIO_ACCESS_KEY: "YAjE5DHUjImbGper19OJ"
      MINIO_SECRET_KEY: "PuAIKgaLqTLDbTkl5S3B7ObC0w1sWgL0rAbeTdv8"

  postgres:
    image: postgres:10.4-alpine
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medusa-store

  redis:
    image: redis:7.0.7-alpine
    restart: always
    container_name: cache
    expose:
      - 6379
    volumes:
      - redis_data:/data

  storefront:
    build:
      context: ./storefront
      dockerfile: Dockerfile
    container_name: medusa-storefront
    restart: always
    depends_on:
      - backend
    volumes:
      - ./storefront:/app/storefront
      - storefront_node_modules:/app/storefront/node_modules
    ports:
      - "8000:8000"

  minio:
    image: quay.io/minio/minio
    restart: always
    ports:
      - "9001:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: ROOTNAME
      MINIO_ROOT_PASSWORD: CHANGEME123
    command: server /data --console-address ":9090"
    volumes:
      - minio_data:/data

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"

volumes:
  storefront_node_modules:
  backend_node_modules:
  minio_data:
  postgres_data:
  redis_data:
